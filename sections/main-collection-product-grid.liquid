{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

<link
  rel="preload"
  href="{{ 'component-rte.css' | asset_url }}"
  as="style"
  onload="this.onload=null;this.rel='stylesheet'"
>

{%- if section.settings.enable_quick_add -%}
  <link rel="stylesheet" href="{{ 'quick-add.css' | asset_url }}" media="print" onload="this.media='all'">
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
<noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .load-more {
    display: flex;
    justify-content: center;
    flex-direction: column;
    max-width: 200px;
    margin: 0 auto;
  }

  #productCount {
    text-align: center;
  }

  .load-more-btn {
    background: var(--gradient-base-accent-2);
    font-family: 'Gotham Book', sans-serif;
    font-size: 13px;
    line-height: 15px;
  }

  .bottom-grid {
    position: relative;
    top: 250px;
  }

  .collection-fieldset {
    border: 0; 
    display: flex;
    flex-wrap: wrap;
    padding: 5px 0;
  }

  .collection-fieldset label {
    border-radius: 3px!important;
  }

  @media screen and (min-width: 750px) and (max-width: 989px) {
    .medium-hide, .quick-add__submit {
      opacity: 1;
    }

    .swym-add-to-wishlist-view-product {
      opacity: 1;
    }

    .number-of-colors {
      display: none;
    }

    .collection-fieldset label {
      display: block;
      margin: 2px;
    }
  }

    @media screen and (min-width: 990px) {
      .large-up-hide, .quick-add__submit {
        opacity: 0;
      }
  
    .collection-fieldset label {
      margin: -32px 0 4px 4px;
      opacity: 0;
    }
    
    .grid__item .collection-fieldset label,
    .grid__item .card-information > p {
      transition: opacity 0.5s ease;
    }
    
    .grid__item:hover .collection-fieldset label {
      opacity: 1;
    }
    
    .grid__item:hover .card-information > p {
      opacity: 0;
    }
  }

  .quick-add__submit {
    padding: 2px;
    min-height: 20px;
    min-width: 50%;
    max-width: 50%;
    float: right;
    border: 0;
    margin-right: 10px;
    margin-top: -30px;
  }

  .grid__item:hover .quick-add__submit {
    transition: opacity 0.5s ease;
    opacity: 1;
  }

  .quick-add__submit:hover {
    border: 1px solid var(--gradient-base-accent-2);
  }

  @media screen and (max-width: 749px) {
    .bottom-grid {
      top: 300px!important;
    }
    .collection-fieldset label {
      display: block;
      margin: 2px;
    }
    .number-of-colors {
      display: none;
    }
    .swym-add-to-wishlist-view-product {
      opacity: 1;
    }
  }

  @media screen and (max-width: 989px) {
    .quick-add__submit {
      float: none;
      min-width: 100%;
      margin-top: 5px;
      border: 1px solid #777777;
    }
  }

  .collection-hero {
    display: none!important;
  }

  .swym-add-to-wishlist-view-product {
    z-index: 2;
    top: 10px!important;
    position: absolute!important;
    right: 10px!important;
    opacity: 0;
  }

  .grid__item:hover .swym-add-to-wishlist-view-product {
    transition: opacity 0.5s ease;
    opacity: 1;
  }
{%- endstyle -%}

<div class="section-{{ section.id }}-padding {% if template contains 'collection' %}bottom-grid{% endif %}">
  {% comment %} Sort is the first tabbable element when filter type is vertical {% endcomment %}
  {%- if section.settings.enable_sorting and section.settings.filter_type == 'vertical' -%}
    <facet-filters-form class="facets facets-vertical-sort page-width small-hide no-js-hidden">
      <form class="facets-vertical-form" id="FacetSortForm">
        <div class="facet-filters sorting caption">
          <div class="facet-filters__field">
            <h2 class="facet-filters__label caption-large text-body">
              <label for="SortBy">{{ 'products.facets.sort_by_label' | t }}</label>
            </h2>
            <div class="select">
              {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
              <select
                name="sort_by"
                class="facet-filters__sort select__select caption-large"
                id="SortBy"
                aria-describedby="a11y-refresh-page-message"
              >
                {%- for option in collection.sort_options -%}
                  <option
                    value="{{ option.value | escape }}"
                    {% if option.value == sort_by %}
                      selected="selected"
                    {% endif %}
                  >
                    {{ option.name | escape }}
                  </option>
                {%- endfor -%}
              </select>
              {% render 'icon-caret' %}
            </div>
          </div>
          <noscript>
            <button type="submit" class="facets__button-no-js button button--secondary">
              {{ 'products.facets.sort_button' | t }}
            </button>
          </noscript>
        </div>

        <div class="product-count-vertical light" role="status">
          <h2 class="product-count__text text-body">
            <span id="ProductCountDesktop">
              {%- if collection.results_count -%}
                {{
                  'templates.search.results_with_count'
                  | t: terms: collection.terms, count: collection.results_count
                }}
              {%- elsif collection.products_count == collection.all_products_count -%}
                {{ 'products.facets.product_count_simple' | t: count: collection.products_count }}
              {%- else -%}
                {{
                  'products.facets.product_count'
                  | t: product_count: collection.products_count, count: collection.all_products_count
                }}
              {%- endif -%}
            </span>
          </h2>
          <div class="loading-overlay__spinner">
            <svg
              aria-hidden="true"
              focusable="false"
              class="spinner"
              viewBox="0 0 66 66"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
            </svg>
          </div>
        </div>
      </form>
    </facet-filters-form>
  {%- endif -%}

  <div class="{% if section.settings.filter_type == 'vertical' %} facets-vertical page-width{% endif %}">
    {{ 'component-facets.css' | asset_url | stylesheet_tag }}
    <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>
    {%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
      <aside
        aria-labelledby="verticalTitle"
        class="facets-wrapper{% unless section.settings.enable_filtering %} facets-wrapper--no-filters{% endunless %}{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}"
        id="main-collection-filters"
        data-id="{{ section.id }}"
      >
        {% render 'facets',
          results: collection,
          enable_filtering: section.settings.enable_filtering,
          enable_sorting: section.settings.enable_sorting,
          filter_type: section.settings.filter_type
        %}
      </aside>
    {%- endif -%}

    <div class="product-grid-container" id="ProductGridContainer">
      {%- paginate collection.products by section.settings.products_per_page -%}
        {%- if collection.products.size == 0 -%}
          <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
            <div class="loading-overlay gradient"></div>
            <div class="title-wrapper center">
              <h2 class="title title--primary">
                {{ 'sections.collection_template.empty' | t -}}
                <br>
                {{
                  'sections.collection_template.use_fewer_filters_html'
                  | t: link: collection.url, class: 'underlined-link link'
                }}
              </h2>
            </div>
          </div>
        {%- else -%}
          <div class="collection{% if section.settings.filter_type != 'vertical' %} page-width{% endif %}">
            <div class="loading-overlay gradient"></div>

            <ul
              id="product-grid"
              data-id="{{ section.id }}"
              data-next-url="{{ paginate.next.url }}"
              class="
                products-on-page grid product-grid grid--{{ section.settings.columns_mobile }}-col-tablet-down
                grid--{{ section.settings.columns_desktop }}-col-desktop
              "
            >
              {%- for product in collection.products -%}
                {% assign lazy_load = false %}
                {%- if forloop.index > 2 -%}
                  {%- assign lazy_load = true -%}
                {%- endif -%}
                <li class="grid__item">
                  {% render 'card-product',
                    card_product: product,
                    media_aspect_ratio: section.settings.image_ratio,
                    show_secondary_image: section.settings.show_secondary_image,
                    show_vendor: section.settings.show_vendor,
                    show_rating: section.settings.show_rating,
                    lazy_load: lazy_load,
                    show_quick_add: section.settings.enable_quick_add,
                    section_id: section.id
                  %}
                  {%- for option in product.options_with_values -%}
                    <fieldset class="js product-form__input variant-fieldset collection-fieldset">
                      {%- for value in option.values -%}
                      {%- liquid
                      assign option_disabled = true

                      for option1_name in variants_option1_arr
                        case option.position
                          when 1
                            if variants_option1_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                              assign option_disabled = false
                            endif
                          when 2
                            if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                              assign option_disabled = false
                            endif
                          when 3
                            if option1_name == product.selected_or_first_available_variant.option1 and variants_option2_arr[forloop.index0] == product.selected_or_first_available_variant.option2 and variants_option3_arr[forloop.index0] == value and variants_available_arr[forloop.index0]
                              assign option_disabled = false
                            endif
                        endcase
                      endfor
                    -%}
                      <input
                        style="display: none;"
                        type="radio"
                        id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                        name="{{ option.name }}"
                        value="{{ value | escape }}"
                        form="{{ product_form_id }}"
                        {% if option.selected_value == value %}
                          checked
                        {% endif %}
                      >
                      <label class="variant-options collection-variant-options" for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
                        {{ value -}}
                        <span class="visually-hidden">{{ 'products.product.variant_sold_out_or_unavailable' | t }}</span>
                      </label>
                    {%- endfor -%}
                  </fieldset>
                {%- endfor -%}
                                </li>
              {%- endfor -%}
            </ul>

            {% if section.settings.enable_load_more == true %}
              <div class="load-more">
                <button class="button load-more-btn" onclick="loadMoreProducts();updateProductCount();">VIEW MORE</button>
                {% capture visibleProductsCountLiquid %}{% endcapture %}
                <div id="productCount">{{ visible_products_count }}/{{ collection.all_products_count }}</div>
              </div>
            {% else %}
              {%- if paginate.pages > 1 -%}
                {% render 'pagination', paginate: paginate, anchor: '' %}
              {%- endif -%}
            {% endif %}
            
          </div>
        {%- endif -%}
      {%- endpaginate -%}
    </div>
  </div>
</div>

<script>
var productItems = document.querySelectorAll('.grid__item');

function updateProductCount() {
    var visibleProducts = 0;

    for (var i = 0; i < productItems.length; i++) {
        if (isVisible(productItems[i])) {
            visibleProducts++;
        }
    }

    var productCountElement = document.getElementById('productCount');
    productCountElement.textContent = `${visibleProducts}/{{ collection.all_products_count }} PRODUCTS`;
}

function isVisible(element) {
    return element.offsetWidth > 0 && element.offsetHeight > 0;
}

// Call the updateProductCount function whenever you need to update the count, like when the page loads or when products are filtered.
updateProductCount();

</script>

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 50,
      "step": 2,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "enable_load_more",
      "default": true,
      "label": "Enable Load More button"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "checkbox",
      "id": "enable_quick_add",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.enable_quick_buy.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label",
      "info": "t:sections.main-collection-product-grid.settings.filter_type.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header_mobile.content"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
